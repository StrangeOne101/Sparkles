package com.strangeone101.sparkle.mixin;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.pixelmonmod.pixelmon.api.config.PixelmonConfigProxy;
import com.pixelmonmod.pixelmon.api.config.PixelmonServerConfig;
import com.pixelmonmod.pixelmon.api.pokemon.boss.BossTier;
import com.pixelmonmod.pixelmon.api.pokemon.species.dimensions.Dimensions;
import com.pixelmonmod.pixelmon.api.pokemon.species.gender.Gender;
import com.pixelmonmod.pixelmon.client.models.PixelmonModelBase;
import com.pixelmonmod.pixelmon.client.render.entity.renderers.AbstractPokemonRenderer;
import com.pixelmonmod.pixelmon.comm.packetHandlers.LensInfoPacket;
import com.pixelmonmod.pixelmon.entities.pixelmon.AbstractClientEntity;
import com.pixelmonmod.pixelmon.entities.pixelmon.PixelmonEntity;
import com.strangeone101.sparkle.Sparkle;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.FontRenderer;
import net.minecraft.client.renderer.IRenderTypeBuffer;
import net.minecraft.client.renderer.entity.EntityRendererManager;
import net.minecraft.client.renderer.entity.MobRenderer;
import net.minecraft.client.resources.I18n;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.util.math.vector.Matrix4f;
import net.minecraft.util.text.ITextComponent;
import net.minecraft.util.text.StringTextComponent;
import net.minecraft.util.text.TextComponent;
import net.minecraft.util.text.TranslationTextComponent;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;

@Mixin(AbstractPokemonRenderer.class)
public abstract class MixinPokemonRenderer<E extends AbstractClientEntity> extends MobRenderer<E, PixelmonModelBase<E>> {

    @Shadow(remap = false)
    protected String lvlTag;
    @Shadow(remap = false)
    protected String bossTag;

    public MixinPokemonRenderer(EntityRendererManager renderManagerIn, PixelmonModelBase<E> entityModelIn, float shadowSizeIn) {
        super(renderManagerIn, entityModelIn, shadowSizeIn);
    }

    protected void renderLabel(E entity, MatrixStack matrix, IRenderTypeBuffer buffer, int light, boolean owned) {
        String line1;
        ITextComponent iTextComponent = null;
        matrix.push();
        float scaleFactor = PixelmonConfigProxy.getGraphics().isScaleModelsUp() ? 1.3F : 1.0F;
        float scale = entity.getPixelmonScale() * scaleFactor * entity.getScaleFactor();
        Dimensions dimensions = entity.getPokemon().getForm().getDimensions();
        double height = 0.7D + dimensions.getHeight() * scale;

        matrix.translate(0.0D, height, 0.0D);
        matrix.rotate(this.renderManager.getCameraOrientation());
        matrix.scale(-0.025F, -0.025F, 0.025F);



        String line3 = null;
        int color1 = -1;
        int color2 = -1;
        int pokemonLevel = entity.getPokemon().getPokemonLevel();

        if (owned) {
            if (entity.getPokemon().isShiny()) {
                color2 = Sparkle.SHINY_COLOR;
            }

            line1 = (Minecraft.getInstance()).player.getName().getString();
            iTextComponent = entity.getPokemon().getDisplayNameWithRibbon();
            line3 = I18n.format("gui.screenpokechecker.lvl") + " " + pokemonLevel;
        } else if (entity.getOwnerUniqueId() != null) {
            if (entity.getPokemon().isShiny()) {
                color2 = Sparkle.SHINY_COLOR;
            }

            PlayerEntity player = entity.getEntityWorld().getPlayerByUuid(entity.getOwnerUniqueId());
            line1 = (player == null) ? "Unknown" : player.getName().getString();
            iTextComponent = entity.getPokemon().getDisplayNameWithRibbon();
            line3 = I18n.format("gui.screenpokechecker.lvl") + " " + pokemonLevel;
        } else {
            TextComponent textComponent = null;
            BossTier bossTier = entity.getBossTier();
            if (bossTier.isNotBoss()) {
                if (PixelmonServerConfig.renderWildLevels) {
                    if (this.lvlTag == null) {
                        this.lvlTag = I18n.format("gui.screenpokechecker.lvl");
                    }
                    line1 = this.lvlTag;
                    textComponent = new StringTextComponent(String.valueOf(pokemonLevel));
                } else {

                    line1 = "";
                    iTextComponent = StringTextComponent.EMPTY;
                }

                if (entity.getPokemon().isShiny()) {
                    int colour = Sparkle.SHINY_COLOR;
                    color1 = color2 = colour;
                }
            } else {

                if (this.bossTag == null) {
                    this.bossTag = I18n.format("gui.boss.text");
                }
                line1 = this.bossTag;
                textComponent = new TranslationTextComponent(bossTier.getName());
                int color = bossTier.getColor().getRGB();
                if (PixelmonConfigProxy.getGraphics().isShowWildNames()) {
                    color1 = color;
                } else {
                    color2 = color;
                }
            }
            if (PixelmonConfigProxy.getGraphics().isShowWildNames()) {
                line1 = line1 + " " + textComponent.getString();
                iTextComponent = entity.getPokemon().getDisplayNameWithRibbon();
            }
        }

        FontRenderer fontrenderer = getFontRendererFromRenderManager();
        int line2Width = fontrenderer.getStringPropertyWidth(iTextComponent);
        int line2Pos = line2Width / 2 * -1;

        matrix.push();
        matrix.translate(-2.5D + line2Pos, -4.5D, 0.0D);
        matrix.scale(0.5F, 0.5F, 0.5F);
        Matrix4f matrix4f = matrix.getLast().getMatrix();

        int j = 0;

        fontrenderer.renderString(line1, 0.0F, 0.0F, color1, false, matrix4f, buffer, false, j, light);


        matrix.pop();

        matrix.push();
        matrix.translate(0.0D, 2.5D, 0.0D);
        matrix4f = matrix.getLast().getMatrix();

        fontrenderer.func_243247_a(iTextComponent, -line2Width / 2.0F, 0.0F, color2, false, matrix4f, buffer, false, j, light);

        matrix.pop();

        if (line3 != null) {
            matrix.push();
            matrix.translate(2.5D + line2Pos, 13.0D, 0.0D);
            matrix.scale(0.5F, 0.5F, 0.5F);
            fontrenderer.renderString(line3, 0.0F, 0.0F, color1, false, matrix
                    .getLast().getMatrix(), buffer, false, j, light);
            matrix.pop();
        }

        if (entity.getPokemon().getBonusStats().preventsCapture()) {
            matrix.push();
            matrix.translate(2.5D + (2 * line2Pos), 13.0D, 0.0D);
            matrix.scale(0.5F, 0.5F, 0.5F);
            fontrenderer.renderString(I18n.format("pokemon.uncatchable"), 0.0F, 0.0F, color1, false, matrix.getLast().getMatrix(), buffer, false, j, light);
            matrix.pop();
        }

        if (entity instanceof PixelmonEntity) {
            PixelmonEntity pixelmon = (PixelmonEntity)entity;
            LensInfoPacket info = pixelmon.getClientOnlyInfo();
            if (info != null) {
                matrix.push();
                matrix.translate(30.0D, -4.5D, 0.0D);
                matrix.scale(0.5F, 0.5F, 0.5F);
                Matrix4f mat = matrix.getLast().getMatrix();
                fontrenderer.func_243247_a((ITextComponent)(new TranslationTextComponent("gui.screenpokechecker.ability")).appendString(": ").appendSibling((ITextComponent)new TranslationTextComponent(info.abilityLangKey)), 0.0F, 0.0F, -1, false, mat, buffer, false, j, light);

                fontrenderer.func_243247_a((ITextComponent)(new TranslationTextComponent("gui.screenpokechecker.nature")).appendString(": ").appendSibling((ITextComponent)new TranslationTextComponent(info.nature.getTranslationKey())), 0.0F, 10.0F, -1, false, mat, buffer, false, j, light);

                fontrenderer.func_243247_a((ITextComponent)(new TranslationTextComponent("gui.trainereditor.ivs")).appendString(": (" + info.ivs.getPercentageString(0) + "%) " + info.ivs.getShorthand("/")), 0.0F, 20.0F, -1, false, mat, buffer, false, j, light);

                if (pixelmon.getPokemon().getGender() != Gender.NONE) {
                    fontrenderer.func_243247_a((ITextComponent)(new TranslationTextComponent("gui.trainereditor.gender")).appendString(": ").appendSibling((ITextComponent)new TranslationTextComponent(pixelmon.getPokemon().getGender().getTranslationKey())), 0.0F, 30.0F, -1, false, mat, buffer, false, j, light);
                }

                matrix.pop();
            }
        }

        matrix.pop();
    }
}
